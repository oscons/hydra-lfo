{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/hydralfo.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "// eslint-disable-next-line no-empty-function\nconst ud = ((function () {})());\n\nconst CANARY = \"__hydralfo_func\";\n\nconst mix_values = (a, b, m) => (m === 0 ? a : (m === 1 ? b : (a * (1 - m)) + (b * m)));\n\nconst undefault = (x, def) => {\n    if (typeof x === 'undefined') {\n        return def;\n    }\n    return x;\n};\n\nconst expand_args = (arg_def, args) => {\n    const vals = {...undefault(arg_def, {})};\n\n    if (typeof args !== 'undefined' && args.length > 0) {\n        const [first] = args;\n        if (typeof first === 'object' && !Array.isArray(first)) {\n            for (const x in arg_def) {\n                if (x in first) {\n                    vals[x] = first[x];\n                }\n            }\n        } else {\n            let defkeys = Object.keys(arg_def);\n            defkeys = defkeys.slice(0, Math.min(defkeys.length, args.length));\n            defkeys.forEach((k, i) => {\n                vals[k] = args[i];\n            });\n        }\n    }\n\n    Object.keys(vals).forEach((x) => {\n        const vx = vals[x];\n        const ax = arg_def[x];\n\n        if (typeof vx === 'function') {\n            vals[x] = (input, call_gen_args, call_args) => {\n                let nargs = call_args;\n                if (typeof nargs === 'undefined') {\n                    nargs = [{}];\n                }\n                if (CANARY in vx) {\n                    // make a 1 level copy of the call args for the call to the sub-chain\n                    const new_call_args = [];\n\n                    nargs.forEach((arg) => {\n                        if (typeof arg === 'object') {\n                            if (Array.isArray(arg)) {\n                                new_call_args.push([...arg]);\n                            } else if (\"call\" in arg) {\n                                new_call_args.push(arg);\n                            } else {\n                                new_call_args.push({...arg});\n                            }\n                        } else {\n                            new_call_args.push(arg);\n                        }\n                    });\n\n                    return undefault(vx.run(new_call_args), ax);\n                }\n\n                return undefault(vx(input, call_gen_args, nargs), ax);\n            };\n        } else if (typeof vx === 'undefined') {\n            vals[x] = () => ax;\n        } else {\n            vals[x] = () => vx;\n        }\n    });\n\n    return vals;\n};\n\nconst get_time = (gen_args, run_args, allow_undef = false) => {\n    let time = ud;\n    let namedargs = run_args;\n\n    if (Array.isArray(namedargs) && namedargs.length > 0) {\n        [namedargs] = namedargs;\n    }\n\n    if (typeof namedargs === 'object' && !Array.isArray(namedargs)) {\n        const {time: atime} = run_args;\n        time = atime;\n    }\n\n    if (typeof time !== 'undefined') {\n        return time;\n    }\n    if (typeof gen_args !== 'undefined') {\n        if (typeof gen_args.values !== 'undefined' && typeof gen_args.values.time !== 'undefined') {\n            return gen_args.values.time;\n        }\n    }\n    if (typeof window !== 'undefined' && typeof window.time !== 'undefined') {\n        return window.time;\n    }\n    if (allow_undef) {\n        return time;\n    }\n    return new Date().getTime() / 1000.0;\n};\n\nconst freeze_values = (v, args, gen_args) => {\n    if (typeof v === 'undefined') {\n        return v;\n    }\n    if (typeof v === 'function') {\n        return v(...args, gen_args);\n    }\n    if (Array.isArray(v)) {\n        return v.map((x) => freeze_values(x, args, gen_args));\n    }\n    return v;\n};\n\nconst _functions = {};\n\n_functions.add = (args) => {\n    const {v: value} = expand_args({v: 0}, args);\n\n    return (input, gen_args, run_args) => {\n        const vv = freeze_values(value, run_args, gen_args);\n        return undefault(input, 0) + vv;\n    };\n};\n\n_functions.speed = (args) => {\n    const {v: value, m: mix} = expand_args({v: ud, m: ud}, args);\n\n    return (input, gen_args, run_args) => {\n        const [vv, mv] = freeze_values([value, mix], run_args, gen_args);\n        \n        let time_scale = 1;\n        if (typeof vv === 'undefined') {\n            if (typeof input !== 'undefined') {\n                time_scale = input;\n            }\n        } else if (typeof input === 'undefined') {\n            time_scale = vv;\n        } else if (typeof mv === 'undefined') {\n            time_scale = vv;\n        } else {\n            time_scale = mix_values(vv, input, mv);\n        }\n\n        gen_args.values.time = time_scale * gen_args.values.time;\n\n        return input;\n    };\n};\n\n_functions.fast = (args) => {\n    const {s: scale, o: offset, m: mix} = expand_args({s: ud, o: 0, m: 0}, args);\n    return (input, gen_args, run_args) => {\n        const [sv, ov, mv] = freeze_values([scale, offset, mix], run_args, gen_args);\n        \n        let time_scale = 1;\n        if (typeof input === 'undefined') {\n            if (typeof sv !== 'undefined') {\n                time_scale = sv;\n            }\n        } else if (typeof sv === 'undefined') {\n            time_scale = input;\n        } else {\n            time_scale = mix_values(sv, input, mv);\n        }\n\n        gen_args.values.time = (time_scale * gen_args.values.time) + ov;\n        \n        return input;\n    };\n};\n\n_functions.time = (args) => {\n    const {s: scale, o: offset} = expand_args({s: 1, o: 0}, args);\n\n    return (input, gen_args, run_args) => {\n        const [sv, ov] = freeze_values([scale, offset], run_args, gen_args);\n\n        return (get_time(gen_args, run_args) * sv) + ov;\n    };\n};\n\n_functions.rnd = (args) => {\n    const {s: scale, o: offset, m: mix} = expand_args({s: ud, o: 0, m: 0}, args);\n\n    return (input, gen_args, run_args) => {\n        const [sv, ov, mv] = freeze_values([scale, offset, mix], run_args, gen_args);\n\n        let svx = 1;\n        if (typeof input === 'undefined') {\n            if (typeof sv !== 'undefined') {\n                svx = sv;\n            }\n        } else if (typeof sv === 'undefined') {\n            svx = input;\n        } else {\n            svx = mix_values(svx, input, mv);\n        }\n\n        return (Math.random() * svx) + ov;\n    };\n};\n\n_functions.rand = _functions.rnd;\n\n_functions.range = (args) => {\n    const {u: upper, l: lower, s: step} = expand_args({u: 10, l: 0, s: 1}, args);\n\n    return (input, gen_args, run_args) => {\n        const [sv, uv, lv] = freeze_values([step, upper, lower], run_args, gen_args);\n        \n        let npi = 0;\n        if (gen_args.private_state.prev) {\n            const {spi = 0} = gen_args.private_state.prev;\n\n            npi = spi + sv + input;\n\n            if (npi >= uv) {\n                npi = lv;\n            }\n\n            if (npi < lv && sv < 0) {\n                npi = uv;\n            }\n        } else if (sv > 0) {\n            npi = lv;\n        } else {\n            npi = uv;\n        }\n\n        gen_args.private_state.prev = {spi: npi};\n\n        return npi;\n    };\n};\n\n_functions.iter = (args) => {\n    const {v: values, s: step} = expand_args({v: [0, 1], s: 1}, args);\n\n    return (input, gen_args, run_args) => {\n        const [vv, sv] = freeze_values([values, step], run_args, gen_args);\n\n        let {pi = 0} = gen_args.private_state.prev ? gen_args.private_state.prev : {};\n\n        if (gen_args.private_state.prev) {\n            pi = sv + pi + undefault(input, 0);\n        }\n        gen_args.private_state.prev = {pi};\n\n        const vs = vv;\n        let idx = Math.floor(pi);\n\n        idx = idx % vs.length;\n\n        const val = vs[idx];\n\n        if (typeof val === 'function') {\n            return val(input, gen_args, run_args);\n        }\n        return val;\n    };\n};\n\n_functions.choose = (args) => {\n    const {v: values, s: scale} = expand_args({v: [0, 1], s: 1}, args);\n\n    return (input, gen_args, run_args) => {\n        const [vv, sv] = freeze_values([values, scale], run_args, gen_args);\n\n        if (vv.length === 0) {\n            return 0;\n        }\n        \n        let idx = undefault(input, 0);\n        idx = idx * sv;\n\n        idx = Math.floor(Math.abs(idx));\n        idx = idx % vv.length;\n\n        let val = vv[idx];\n\n        const fmark = `choose_mark_${new Date().getTime()}`;\n        let maxcnt = 10;\n\n        while (typeof val === 'function') {\n            const fn = val;\n            fn.__choose_mark = fmark;\n\n            val = fn(...run_args, gen_args);\n            if (maxcnt-- <= 0 || (typeof val === 'function' && val.__choose_mark === fmark)) {\n                // loop detected\n                val = 0;\n                break;\n            }\n\n            delete fn.__choose_mark;\n        }\n        return val;\n    };\n};\n\n_functions.sin = (args) => {\n    const {f: frequency, s: scale, o: offset} = expand_args({f: 1, s: 1, o: 0}, args);\n\n    return (input, gen_args, run_args) => {\n        const [fv, sv, ov] = freeze_values([frequency, scale, offset], run_args, gen_args);\n        let time = 0;\n\n        if (typeof input === 'undefined') {\n            time = get_time(gen_args, run_args);\n            \n        } else {\n            time = input;\n        }\n        time = undefault(time, Math.PI);\n\n        return (((Math.sin(time * 2 * Math.PI * fv) / 2) + 0.5) * sv) + ov;\n    };\n};\n\n_functions.floor = (args) => {\n    const {d: digits} = expand_args({d: 0}, args);\n\n    return (input, gen_args, run_args) => {\n        const dv = freeze_values(digits, run_args, gen_args);\n        const fact = Math.pow(10, dv);\n\n        return Math.floor(input * fact) / fact;\n    };\n};\n\n_functions.set = (args) => {\n    const {v: value} = expand_args({v: 0}, args);\n\n    return (input, gen_args, run_args) => {\n        const vv = freeze_values(value, run_args, gen_args);\n        return vv;\n    };\n};\n\n_functions.mul = (args) => {\n    const {v: value} = expand_args({v: 0}, args);\n\n    return (input, gen_args, run_args) => {\n        const vv = freeze_values(value, run_args, gen_args);\n        return input * vv;\n    };\n};\n\n_functions.div = (args) => {\n    const {v: value} = expand_args({v: 1}, args);\n\n    return (input, gen_args, run_args) => {\n        const vv = freeze_values(value, run_args, gen_args);\n\n        const definput = undefault(input, 0);\n        \n        if (vv === 0) {\n            return definput / 0.0000000000001;\n        }\n        return definput / vv;\n    };\n};\n\n_functions.mod = (args) => {\n    const {v: value} = expand_args({v: 1}, args);\n\n    return (input, gen_args, run_args) => {\n        const vv = freeze_values(value, run_args, gen_args);\n        \n        if (vv === 0) {\n            return 0;\n        }\n        return undefault(input, 0) % vv;\n    };\n};\n\n_functions.sah = (args) => {\n    const {h: hold_time} = expand_args({h: 1}, args);\n\n    return (input, gen_args, run_args) => {\n        const [hv] = freeze_values([hold_time], run_args, gen_args);\n\n        let prev_time = 0;\n        if (typeof gen_args.private_state.time !== 'undefined') {\n            prev_time = gen_args.private_state.time;\n        }\n        if (typeof gen_args.private_state.value === 'undefined') {\n            gen_args.private_state.value = input;\n        }\n\n        if ((gen_args.values.time - prev_time) >= hv) {\n            gen_args.private_state.value = input;\n            gen_args.private_state.time = gen_args.values.time;\n        }\n        \n        return gen_args.private_state.value;\n    };\n};\n\n_functions.slew = (args) => {\n    const {r: rate, x: max} = expand_args({r: 1, x: Number.MAX_VALUE}, args);\n\n    return (input, gen_args, run_args) => {\n        const [rv, xv] = freeze_values([rate, max], run_args, gen_args);\n\n        if (!gen_args.private_state.prev) {\n            gen_args.private_state.prev = input;\n        }\n        let genin = input;\n        if (typeof genin === 'undefined') {\n            genin = gen_args.private_state.prev;\n        }\n\n        let diff = (genin - gen_args.private_state.prev);\n\n        if (rv > 0) {\n            diff = diff * (1 - (1 / rv));\n        }\n        if (diff > 0) {\n            if (diff > xv) {\n                diff = xv;\n            }\n        } else if (diff < -xv) {\n            diff = -xv;\n        }\n\n        const nv = gen_args.private_state.prev + diff;\n\n        gen_args.private_state.prev = nv;\n\n        return nv;\n    };\n};\n\n_functions.map = (args) => {\n    const {f: func} = expand_args({f: (x) => x}, args);\n\n    return (value, gen_args, run_args) => {\n        return func(value, gen_args, ...run_args);\n    };\n};\n\n_functions.beats = (args) => {\n    const {s: scale, b: sbpm} = expand_args({s: 1, b: ud}, args);\n\n    return (input, gen_args, run_args) => {\n        const [sv, bv] = freeze_values([scale, sbpm], run_args, gen_args);\n        const {time, bpm} = run_args;\n        \n        let abpm = bv;\n        if (typeof abpm === 'undefined') {\n            abpm = bpm;\n        }\n\n        gen_args.values.time = undefault(time, 0) / 60 * abpm * sv;\n\n        return input;\n    };\n};\n\n_functions.use = (args) => {\n    const {n: name, c: copy} = expand_args({n: \"val\", c: false}, args);\n\n    return (input, gen_args, run_args) => {\n        const [nv, cv] = freeze_values([name, copy], run_args, gen_args);\n\n        let ret = gen_args.values[nv];\n        \n        if (cv) {\n            ret = input;\n        }\n        gen_args.current_value = nv;\n\n        return ret;\n    };\n};\n\n_functions.noop = () => ((input) => input);\n_functions.gen = _functions.noop;\n\n_functions.used = () => ((_, gen_args) => gen_args.current_value);\n\nconst run_calls = (global_state, instance_state, calls, args) => {\n    let run_args = args;\n    if (typeof run_args === 'undefined' || run_args.length === 0) {\n        run_args = [{}];\n    }\n    if (typeof run_args[0] === 'undefined') {\n        run_args[0] = {};\n    }\n\n    const gen_args = {\n        input: ud\n        , current_value: \"val\"\n        , values: {\n            val: ud\n            , initial_args: args\n            , ...run_args[0]\n        }\n        , global_state\n        , instance_state\n        , private_state: {}\n    };\n\n    gen_args.values.initial_time = get_time(gen_args.values, gen_args.values);\n    gen_args.values.time = gen_args.values.initial_time;\n\n    run_args[0] = gen_args.values;\n\n    calls.forEach(([fncall, private_state]) => {\n        gen_args.private_state = private_state;\n        gen_args.input = gen_args.values[gen_args.current_value];\n\n        const res = fncall(gen_args.input, gen_args, run_args);\n\n        gen_args.values[gen_args.current_value] = res;\n    });\n    \n    const rval = gen_args.values[gen_args.current_value];\n    if (typeof rval === 'undefined') {\n        return 0;\n    }\n\n    return rval;\n};\n\nconst sub_call = (global_state, prev_calls, fun) => {\n    const calls = prev_calls.map((x) => [x, {}]);\n    const instance_state = {};\n\n    if (typeof fun !== 'undefined') {\n        calls.push([fun, {}]);\n    }\n\n    const rfun = (...args) => run_calls(global_state, instance_state, calls, args);\n    rfun.run = rfun;\n    rfun[CANARY] = true;\n\n    Object.entries(_functions).forEach(([name, gen]) => {\n        if (name in rfun && !(name in Object.getOwnPropertyNames())) {\n            throw new Error(`${name} already exists on parents of rfun`);\n        }\n\n        rfun[name] = (...args) => sub_call(\n            global_state\n            , calls.map(([call]) => call)\n            , gen(args)\n        );\n    });\n\n    return rfun;\n};\n\nconst get_global_env = () => {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return global;\n};\n\nconst make_new_lfo = (state) => {\n    const fdef = {};\n    const global_state = typeof state === 'undefined' ? {} : state;\n    \n    Object.keys(_functions).forEach((name) => {\n        fdef[name] = (...args) => sub_call(global_state, [])[name](...args);\n    });\n\n    fdef.__release = (new_lfo) => {\n        // for future use, e.g. to stop timeouts etc\n    };\n\n    return fdef;\n};\n\nconst GLOBAL_INIT_ID = \"__hydralfo_global\";\n\nexport const init = (state = ud, init_global = true, force = false) => {\n    const new_lfo = make_new_lfo(state);\n\n    if (!init_global) {\n        return new_lfo;\n    }\n\n    const env = get_global_env();\n\n    if (typeof env !== 'undefined') {\n        if (CANARY in env) {\n            const old_lfo = env[CANARY];\n            if (typeof old_lfo === 'object') {\n                if (!force) {\n                    return env[CANARY];\n                }\n                if ('__release' in old_lfo) {\n                    old_lfo.__release(new_lfo);\n                }\n            }\n        }\n        env[CANARY] = new_lfo;\n    }\n\n    return new_lfo;\n};\n"
  ]
}