{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/hydralfo.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "\n// eslint-disable-next-line no-empty-function\nconst ud = ((function () {})());\n\nexport const mix_values = (a, b, m) => (m === 0 ? a : (m === 1 ? b : (a * (1 - m)) + (b * m)));\n\nexport const undefault = (x, def) => {\n    if (typeof x === 'undefined') {\n        return def;\n    }\n    return x;\n};\n\nexport const expand_args = (adef, rest) => {\n    const vals = {...adef};\n\n    if (typeof rest !== 'undefined' && rest.length > 0) {\n        if (rest.length === 1 && typeof rest[0] === 'object' && !Array.isArray(rest[0])) {\n            const [first] = rest;\n            for (const x in adef) {\n                if (x in first) {\n                    vals[x] = first[x];\n                }\n            }\n        } else {\n            let ok = Object.keys(adef);\n            ok = ok.slice(0, Math.min(ok.length, rest.length));\n            for (let i = 0; i < ok.length; i++) {\n                vals[ok[i]] = rest[i];\n            }\n        }\n    }\n\n    Object.keys(vals).forEach((x) => {\n        const vx = vals[x];\n        const ax = adef[x];\n        if (typeof vals[x] === 'function') {\n            if (typeof vx._private_state === 'undefined') {\n                vals[x] = (...args) => {\n                    const rv = vx(...args);\n                    if (typeof rv === 'undefined') {\n                        return ax;\n                    }\n                    return rv;\n                };\n            } else {\n                vals[x] = vx.g();\n            }\n        } else if (typeof vx === 'undefined') {\n            vals[x] = () => ax;\n        } else {\n            vals[x] = () => vx;\n        }\n    });\n\n    return vals;\n};\n\nexport const get_time = (args) => {\n    let time = ud;\n    if (typeof args === 'object' && !Array.isArray(args)) {\n        const {time: atime} = args;\n        time = atime;\n    }\n\n    if (time) {\n        return time;\n    }\n    if (typeof window !== 'undefined' && typeof window.time !== 'undefined') {\n        return window.time;\n    }\n    return new Date().getTime() / 1000.0;\n};\n\nexport const freeze_values = (v, args) => {\n    if (typeof v === 'undefined') {\n        return v;\n    }\n    if (typeof v === 'function') {\n        return v(args);\n    }\n    if (Array.isArray(v)) {\n        return v.map((x) => freeze_values(x, args));\n    }\n    return v;\n};\n\nconst _functions = {};\n\n_functions.add = (that, args) => {\n    const {v: value} = expand_args({v: 0}, args);\n\n    return (input, run_args) => {\n        const vv = freeze_values(value, run_args);\n        return undefault(input, 0) + vv;\n    };\n};\n\n_functions.speed = (that, args) => {\n    const {v: value, m: mix} = expand_args({v: ud, m: ud}, args);\n\n    return (input, run_args, private_state, run_state) => {\n        const [vv, mv] = freeze_values([value, mix], run_args);\n        \n        if (typeof vv === 'undefined') {\n            if (typeof input !== 'undefined') {\n                run_state.time_scale = input;\n            }\n        } else if (typeof input === 'undefined') {\n            run_state.time_scale = vv;\n        } else if (typeof mv === 'undefined') {\n            run_state.time_scale = vv;\n        } else {\n            run_state.time_scale = mix_values(vv, input, mv);\n        }\n\n        return input;\n    };\n};\n\n_functions.fast = (that, args) => {\n    const {s: scale, o: offset, m: mix} = expand_args({s: ud, o: 0, m: 0}, args);\n    return (input, run_args, private_state, run_state) => {\n        const [sv, ov, mv] = freeze_values([scale, offset, mix], run_args);\n        \n        if (typeof input === 'undefined') {\n            if (typeof sv !== 'undefined') {\n                run_state.time_scale = run_state.time_scale * sv;\n            }\n        } else if (typeof sv === 'undefined') {\n            run_state.time_scale = run_state.time_scale * input;\n        } else {\n            run_state.time_scale = run_state.time_scale * mix_values(sv, input, mv);\n        }\n\n        run_state.time_scale = run_state.time_scale + ov;\n        \n        return input;\n    };\n};\n\n_functions.time = (that, args) => {\n    const {s: scale, o: offset} = expand_args({s: 1, o: 0}, args);\n\n    return (input, run_args) => {\n        const [sv, ov] = freeze_values([scale, offset], run_args);\n\n        return (get_time(...run_args) * sv) + ov;\n    };\n};\n\n_functions.rnd = (that, args) => {\n    const {s: scale, o: offset, m: mix} = expand_args({s: 1, o: 0, m: 0}, args);\n\n    return (input, run_args) => {\n        const [sv, ov, mv] = freeze_values([scale, offset, mix], run_args);\n\n        let svx = 1;\n        if (typeof input === 'undefined') {\n            if (typeof sv !== 'undefined') {\n                svx = sv;\n            }\n        } else if (typeof sv === 'undefined') {\n            svx = input;\n        } else {\n            svx = mix_values(svx, input, mv);\n        }\n\n        return (Math.random() * svx) + ov;\n    };\n};\n\n_functions.range = (that, args) => {\n    const {u: upper, l: lower, s: step} = expand_args({u: 10, l: 0, s: 1}, args);\n\n    return (input, run_args, private_state) => {\n        const [sv, uv, lv] = freeze_values([step, upper, lower], run_args);\n        \n        let npi = 0;\n        if (private_state.prev) {\n            const {spi = 0} = private_state.prev;\n\n            npi = spi + sv + input;\n\n            if (npi >= uv) {\n                npi = lv;\n            }\n\n            if (npi < lv && sv < 0) {\n                npi = uv;\n            }\n        } else if (sv > 0) {\n            npi = lv;\n        } else {\n            npi = uv;\n        }\n\n        private_state.prev = {spi: npi};\n\n        return npi;\n    };\n};\n\n_functions.iter = (...args) => {\n    const {v: values, s: step} = expand_args({v: [0, 1], s: 1}, args);\n\n    return (input, run_args, private_state) => {\n        const [vv, sv] = freeze_values([values, step], run_args);\n\n        let {pi = 0} = private_state.prev ? private_state.prev : {};\n\n        if (private_state.prev) {\n            pi = sv + pi + input;\n        }\n        private_state.prev = {pi};\n\n        const vs = vv;\n        let idx = Math.floor(pi);\n\n        idx = idx % vs.length;\n\n        const val = vs[idx];\n\n        if (typeof val === 'function') {\n            return val(...run_args);\n        }\n        return val;\n    };\n};\n\n_functions.choose = (...args) => {\n    const {v: values, s: scale} = expand_args({v: [0, 1], s: 1}, args);\n\n    return (input, run_args) => {\n        const [vv, sv] = freeze_values([values, scale], run_args);\n        let idx = input;\n        idx = idx * sv;\n        if (idx < 0) {\n            idx = -idx;\n        }\n        idx = Math.floor(idx);\n\n        const vs = vv;\n\n        idx = idx % vs.length;\n\n        const val = vs[idx];\n\n        if (typeof val === 'function') {\n            return val(...run_args);\n        }\n        return val;\n    };\n};\n\n_functions.sin = (...args) => {\n    const {f: frequency, s: scale, o: offset} = expand_args({f: 1, s: 1, o: 0}, args);\n\n    return (input, run_args) => {\n        const [fv, sv, ov] = freeze_values([frequency, scale, offset], run_args);\n        let time = 0;\n\n        if (input) {\n            time = input;\n        } else {\n            time = get_time(...run_args);\n        }\n\n        return (((Math.sin(time * 2 * Math.PI * fv) / 2) + 0.5) * sv) + ov;\n    };\n};\n\n_functions.floor = (that, args) => {\n    const {d: digits} = expand_args({d: 0}, args);\n\n    return (input, run_args) => {\n        const dv = freeze_values(digits, run_args);\n        const fact = Math.power(10, dv);\n\n        return Math.floor(input * fact) / fact;\n    };\n};\n\n_functions.set = (that, args) => {\n    const {v: value} = expand_args({v: 0}, args);\n\n    return (input, run_args) => {\n        const vv = freeze_values(value, run_args);\n        return vv;\n    };\n};\n\n_functions.mul = (that, args) => {\n    const {v: value} = expand_args({v: 0}, args);\n\n    return (input, run_args) => {\n        const vv = freeze_values(value, run_args);\n        return input * vv;\n    };\n};\n\n_functions.div = (that, args) => {\n    const {v: value} = expand_args({v: 1}, args);\n\n    return (input, run_args) => {\n        const vv = freeze_values(value, run_args);\n\n        const definput = undefault(input, 0);\n        \n        if (vv === 0) {\n            return definput / 0.0000000000001;\n        }\n        return definput / vv;\n    };\n};\n\n_functions.mod = (that, args) => {\n    const {v: value} = expand_args({v: 1}, args);\n\n    return (input, run_args) => {\n        const vv = freeze_values(value, run_args);\n        \n        if (vv === 0) {\n            return 0;\n        }\n        return input % vv;\n    };\n};\n\n_functions.slew = (that, args) => {\n    const {r: rate, x: max} = expand_args({r: 1, x: Number.MAX_VALUE}, args);\n\n    return (input, run_args, private_state) => {\n        const [rv, xv] = freeze_values([rate, max], run_args);\n\n        if (!private_state.prev) {\n            private_state.prev = input;\n        }\n\n        let diff = (input - private_state.prev);\n\n        if (rv > 0) {\n            diff = diff * (1 - (1 / rv));\n        }\n        if (diff > 0) {\n            if (diff > xv) {\n                diff = xv;\n            }\n        } else if (diff < -xv) {\n            diff = -xv;\n        }\n\n        const nv = private_state.prev + diff;\n\n        private_state.prev = nv;\n\n        return nv;\n    };\n};\n\n_functions.apply = (that, args) => {\n    const {f: func} = expand_args({f: (x) => x}, args);\n\n    return (input, run_args, private_state) => func(input, run_args, private_state);\n};\n\nconst GenChain = function (state = {}) {\n    const that = this;\n\n    that.state = state;\n    that.calls = [];\n\n    that.run = (...args) => {\n        let run_args = args;\n        if (typeof run_args === 'undefined' || run_args.length === 0) {\n            run_args = [{}];\n        }\n        if (typeof run_args[0] === 'undefined') {\n            run_args[0] = {};\n        }\n\n        const run_state = {\n            initial_args: args\n            , time_scale: 1\n            , initial_time: get_time(...run_args)\n        };\n        let input = ud;\n        for (let i = 0; i < that.calls.length; i++) {\n            const {call: fncall, state: private_state} = that.calls[i];\n\n            run_args[0].time = run_state.initial_time * run_state.time_scale;\n\n            const res = fncall(input, run_args, private_state, run_state);\n\n            if (typeof res === 'undefined') {\n                input = 0;\n            } else {\n                input = res;\n            }\n        }\n\n        return input;\n    };\n\n    that._add_call = (call) => {\n        that.calls.push({call, state: {}});\n    };\n\n    that._that_fun = (...args) => that.run(...args);\n    that._that_fun.run = that.run;\n\n    that._wire_call = (name, gen) => {\n        that[name] = (...args) => {\n            that._add_call(gen(that, args));\n            return that._that_fun;\n        };\n        that._that_fun[name] = that[name];\n    };\n\n    Object.entries(_functions)\n        .forEach(([name, fn]) => that._wire_call(name, fn));\n\n};\n\nexport const start = () => new GenChain();\n\nconst setup_init_call = (fun, ...args) => start()[fun](...args);\n\n/* eslint-disable no-multi-spaces */\nexport const add    = (...args) => setup_init_call(\"add\", ...args);\nexport const time   = (...args) => setup_init_call(\"time\", ...args);\nexport const speed  = (...args) => setup_init_call(\"speed\", ...args);\nexport const fast   = (...args) => setup_init_call(\"fast\", ...args);\nexport const mul    = (...args) => setup_init_call(\"mul\", ...args);\nexport const mod    = (...args) => setup_init_call(\"mod\", ...args);\nexport const div    = (...args) => setup_init_call(\"div\", ...args);\nexport const range  = (...args) => setup_init_call(\"rang\", ...args);\nexport const iter   = (...args) => setup_init_call(\"iter\", ...args);\nexport const choose = (...args) => setup_init_call(\"choose\", ...args);\nexport const slew   = (...args) => setup_init_call(\"slew\", ...args);\nexport const set    = (...args) => setup_init_call(\"set\", ...args);\nexport const rnd    = (...args) => setup_init_call(\"rnd\", ...args);\n"
  ]
}